version: 2.1

executors:
  main-executor:
    parameters:
      v:
        type: string
    docker:
      - image: cimg/python:<< parameters.v >>
      - image: circleci/redis:latest
      - image: circleci/postgres:9-alpine-ram
        environment:
          POSTGRES_DB: bitcart_test
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123@
    environment:
      TEST_ARGS: "--junitxml test-results/pytest/coverage.xml --cov-report html:coverage"

commands:
  install_dependencies:
    steps:
      - restore_cache:
          keys:
            - v38-dependencies-{{ .Branch }}-{{ checksum "~/.pyenv/version" }}-{{ checksum "requirements/web.txt" }}-{{ checksum "requirements/test.txt" }}-{{ checksum "requirements/daemons/btc.txt" }}

      - run:
          name: install dependencies
          command: |
            virtualenv ~/venv
            echo ". ~/venv/bin/activate" >> $BASH_ENV
            source $BASH_ENV
            sudo apt update
            sudo apt install libsecp256k1-dev
            pip install -U -r requirements.txt
            pip install -U -r requirements/daemons/btc.txt
            pip install -U -r requirements/test.txt

      - save_cache:
          paths:
            - ~/venv
          key: v38-dependencies-{{ .Branch }}-{{ checksum "~/.pyenv/version" }}-{{ checksum "requirements/web.txt" }}-{{ checksum "requirements/test.txt" }}-{{ checksum "requirements/daemons/btc.txt" }}

  upload-results:
    steps:
      - store_test_results:
          path: test-results

      - store_artifacts:
          path: coverage

      - store_artifacts:
          path: test-results

jobs:
  test:
    parameters:
      v:
        type: string
        default: "3.7"

    executor:
      name: main-executor
      v: << parameters.v >>

    environment:
      PYTHON: << parameters.v >>

    working_directory: ~/repo

    steps:
      - checkout

      - install_dependencies

      - run:
          name: prepare daemon
          command: |
            make testnet
          background: true

      - run:
          name: run tests
          command: |
            make ci
            codecov -F tests -e PYTHON

      - upload-results

  functional-tests:
    executor:
      name: main-executor
      v: "3.7"

    working_directory: ~/repo

    steps:
      - checkout

      - install_dependencies

      - run:
          name: install regtest utils
          command: |
            sudo add-apt-repository -y ppa:luke-jr/bitcoincore
            sudo apt update
            sudo apt install -y bitcoind
            sudo apt install screen

      - run:
          name: prepare bitcoind
          command: |
            make bitcoind
          background: true

      - run:
          name: prepare electrumx
          command: |
            make electrumx
          background: true

      - run:
          name: prepare regtest daemon
          command: |
            make regtest
          background: true

      - run:
          name: run tests
          command: |
            sleep 10s
            make functional
            codecov -F functional-tests

      - upload-results

  deploy:
    docker:
      - image: cimg/python:3.7

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: set up build environment
          command: |
            git clone https://github.com/bitcartcc/bitcart-docker
            cd bitcart-docker
            ./dev-setup.sh $CIRCLE_BRANCH

      - setup_remote_docker

      - run:
          name: Publish docker images
          command: |
            cd .circleci
            docker login --username=$DOCKER_USER --password=$DOCKER_PASS
            python3 build.py

  deploy-cli:
    docker:
      - image: cimg/go

    working_directory: ~/repo

    steps:
      - checkout

      - run:
          name: Build and publish Go CLI
          command: |
            cd cli
            export VERSION="${CIRCLE_TAG#cli-}"
            make get-deps
            make build # ensure it works
            make release ARGS="-ldflags '-X main.Version=$VERSION'"
            go get github.com/tcnksm/ghr
            ghr -t ${GITHUB_TOKEN} -u ${CIRCLE_PROJECT_USERNAME} -r ${CIRCLE_PROJECT_REPONAME} -c ${CIRCLE_SHA1} -replace $CIRCLE_TAG dist/

      - store_artifacts:
          path: cli/dist

workflows:
  version: 2
  build_and_test:
    jobs:
      - test:
          name: test-<< matrix.v >>
          matrix:
            parameters:
              v:
                - "3.7"
                - "3.8"
                - "3.9"
      - functional-tests:
          requires:
            - test
      - deploy:
          context: global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*/

  cli:
    jobs:
      - deploy-cli:
          context: global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /cli-[0-9]+(\.[0-9]+)*/
