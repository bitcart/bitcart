version: 2.1

orbs:
  bitcart: bitcart/bitcart-shared@2

executors:
  main-executor:
    parameters:
      v:
        type: string
        default: "3.12"
    docker:
      - image: cimg/python:<< parameters.v >>
      - image: cimg/redis:7.4
      - image: circleci/postgres:12-alpine-ram # TODO: explore github actions
        environment:
          POSTGRES_DB: bitcart_test
          POSTGRES_HOST_AUTH_METHOD: trust
    environment:
      TEST_ARGS: "-o junit_family=xunit1 --junitxml test-results/pytest/coverage.xml --cov-report html:coverage"

commands:
  install_dependencies:
    parameters:
      cache_dir:
        type: string
        default: /home/circleci/.cache/uv

    steps:
      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "~/.pyenv/version" }}-{{ checksum "uv.lock" }}

      - run:
          name: Install dependencies
          command: |
            sudo apt update
            sudo apt install libsecp256k1-dev
            curl -LsSf https://astral.sh/uv/install.sh | sh
            mkdir -p "<<parameters.cache_dir>>" && \
            uv sync --frozen --compile-bytecode --no-dev --group web --group test --group btc --cache-dir <<parameters.cache_dir>>
            echo ". ~/repo/.venv/bin/activate" >> $BASH_ENV
            uv cache prune --ci --cache-dir <<parameters.cache_dir>>

      - save_cache:
          paths:
            - "<<parameters.cache_dir>>"
          key: v1-dependencies-{{ .Branch }}-{{ checksum "~/.pyenv/version" }}-{{ checksum "uv.lock" }}

  install-lint-dependencies:
    parameters:
      cache_dir:
        type: string
        default: /home/circleci/.cache/uv
    steps:
      - checkout

      - restore_cache:
          keys:
            - v1-dependencies-{{ .Branch }}-{{ checksum "~/.pyenv/version" }}-{{ checksum "uv.lock" }}

      - run:
          name: Install dependencies
          command: |
            curl -LsSf https://astral.sh/uv/install.sh | sh
            mkdir -p "<<parameters.cache_dir>>" && \
            uv sync --frozen --compile-bytecode --no-dev --group lint --cache-dir <<parameters.cache_dir>>
            echo ". ~/project/.venv/bin/activate" >> $BASH_ENV
            uv cache prune --ci --cache-dir <<parameters.cache_dir>>

      - save_cache:
          paths:
            - "<<parameters.cache_dir>>"
          key: v1-dependencies-{{ .Branch }}-{{ checksum "~/.pyenv/version" }}-{{ checksum "uv.lock" }}

  run-lint:
    steps:
      - run:
          name: Check format and lint
          command: |
            make checkformat lint

  upload-results:
    steps:
      - store_test_results:
          path: test-results

      - store_artifacts:
          path: coverage

      - store_artifacts:
          path: test-results

  setup-bitcart-docker:
    steps:
      - run:
          name: Prepare bitcart-docker
          command: |
            git clone https://github.com/bitcart/bitcart-docker
            cd bitcart-docker
            ./dev-setup.sh $CIRCLE_BRANCH

  build-bitcart-images:
    steps:
      - checkout
      - setup-bitcart-docker
      - bitcart/login-to-registries
      - bitcart/enable-buildx
      - run:
          name: Publish docker images
          command: |
            cd .circleci
            python3 build.py

jobs:
  test:
    parameters:
      v:
        type: string

    executor:
      name: main-executor
      v: << parameters.v >>

    parallelism: 4

    environment:
      PYTHON: << parameters.v >>

    working_directory: ~/repo

    steps:
      - checkout

      - install_dependencies

      - run:
          name: prepare daemon
          command: |
            make testnet
          background: true

      - run:
          name: run tests
          command: |
            cd tests
            TEST_FILES=$(find -name "test_*.py" -not -name "test_functional.py" | sed 's/.\//tests\//' | circleci tests split --split-by=timings)
            cd ..
            pytest -n 2 $TEST_ARGS $TEST_FILES

      - bitcart/codecov

      - upload-results

  deploy-amd64:
    executor: bitcart/build-ubuntu

    working_directory: ~/repo

    environment:
      ARCH: amd64

    steps:
      - build-bitcart-images

  deploy-arm:
    executor: bitcart/build-ubuntu-arm

    working_directory: ~/repo

    environment:
      ARCH: arm

    steps:
      - build-bitcart-images

  deploy:
    executor: bitcart/build-ubuntu

    working_directory: ~/repo

    environment:
      MANIFEST: true

    steps:
      - build-bitcart-images

workflows:
  version: 2
  build_and_test:
    jobs:
      - bitcart/lint:
          name: lint
          pre-steps:
            - install-lint-dependencies
            - run-lint

      - test:
          name: test-<< matrix.v >>
          requires:
            - lint
          matrix:
            parameters:
              v:
                - "3.12"
                - "3.13"
      - bitcart/functional-tests:
          name: functional-tests
          executor: main-executor
          dependency-steps:
            - install_dependencies
          requires:
            - test
      - deploy-amd64:
          context: global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*/
      - deploy-arm:
          context: global
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*/
      - deploy:
          context: global
          requires:
            - deploy-amd64
            - deploy-arm
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /[0-9]+(\.[0-9]+)*/
