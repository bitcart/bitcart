[project]
name = "bitcart-api"
version = "1.0.0"
description = "Bitcart Merchants API"
requires-python = ">=3.11"
dependencies = ["python-decouple"]

[dependency-groups]
lint = ["pre-commit", "ruff"]
test = [
    "httpx",
    "httpx-ws",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-parametrization",
    "pytest-xdist",
]
web = [
    "aiofiles",
    "alembic",
    "apprise",
    "asyncpg==0.30.0",
    "bitcart",
    "email-validator",
    "fastapi",
    "fido2",
    "gino[pg]==1.1.0rc1",
    "hiredis",
    "Jinja2",
    "jsonschema",
    "msgpack",
    "packaging",
    "paramiko",
    "psycopg2-binary",
    "pwdlib[bcrypt]",
    "pydantic-settings",
    "pyotp",
    "python-dateutil",
    "python-dotenv",
    "python-multipart",
    "redis",
    "setuptools",
    "sqlalchemy<1.5",
    "uvicorn[standard]",
]
production = ["gunicorn"]

# daemons
daemon-base = ["aiohttp<4.0"]
btc-based = [{ include-group = "daemon-base" }, "protobuf<6"]
eth-based = [
    { include-group = "daemon-base" },
    "aiolimiter",
    "bitarray<3",                      # electrum requires this
    "eth-account<0.14",                # web3 broke this
    "eth-rlp<2.0",                     # web3 broke this
    "mnemonic",
    "web3>=6,<7",                      # TODO: upgrade
]

# sort alphabetically
bch = [
    { include-group = "btc-based" },
    "electron-cash @ https://github.com/Electron-Cash/Electron-Cash/archive/cd4a0fe6cceb6ffc90dca5525c7e405387561506.zip",
]
bnb = [{ include-group = "eth-based" }]
bsty = [
    { include-group = "btc-based" },
    "electrum-bsty[crypto] @ git+https://github.com/GlobalBoost/electrum@e5b267128464e7fa3298eb5615313ae7266dda7d",
]
btc = [
    { include-group = "btc-based" },
    "electrum[crypto] @ git+https://github.com/spesmilo/electrum@df1b9a223c77f4597a75df4e040754a58185151f",
]
eth = [{ include-group = "eth-based" }]
grs = [
    { include-group = "btc-based" },
    "electrum-grs[crypto] @ git+https://github.com/Groestlcoin/electrum-grs@3bbebc766b0d0f12eb69b226de723e6a6431cd80",
]
ltc = [
    { include-group = "btc-based" },
    "electrum-ltc[crypto] @ git+https://github.com/bitcart/electrum-ltc@b0c8bf8dd6c829ec5e93ff85627083f43b3db857",
    "scrypt>=0.6.0",
]
matic = [{ include-group = "eth-based" }]
sbch = [{ include-group = "eth-based" }]
trx = [{ include-group = "eth-based" }, "async-lru", "tronpy", "trontxsize"]
xmr = [{ include-group = "daemon-base" }, "monero", "universalasync"]
xrg = [
    { include-group = "btc-based" },
    "oregano @ https://github.com/Ergon-moe/Oregano/archive/6fc11cd927eda956e7fe3738fbddd30c347920a1.zip",
]

daemons = [
    { include-group = "bch" },
    { include-group = "bnb" },
    { include-group = "bsty" },
    { include-group = "btc" },
    { include-group = "eth" },
    { include-group = "grs" },
    { include-group = "ltc" },
    { include-group = "matic" },
    { include-group = "sbch" },
    { include-group = "trx" },
    { include-group = "xmr" },
    { include-group = "xrg" },
]

# all groups
dev = [
    { include-group = "lint" },
    { include-group = "test" },
    { include-group = "web" },
    { include-group = "daemons" },
    { include-group = "production" },
]

[tool.uv]
override-dependencies = ["protobuf>=4"]

[tool.ruff]
target-version = "py311"
line-length = 127

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "B",
    "T10",
    "C",
    "SIM",
    "RUF100",
    "RET",
    "A",
    "S",
    "ASYNC",
]
ignore = ["RET502", "RET503", "S104", "S507", "ASYNC110"]
mccabe = { max-complexity = 12 }

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S"]
"scripts/*" = ["S"]
".circleci/*" = ["S"]

[tool.ruff.lint.isort]
known-third-party = ["bitcart"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.params.Depends",
    "fastapi.Query",
    "fastapi.params.Query",
    "fastapi.Path",
    "fastapi.params.Path",
    "fastapi.Body",
    "fastapi.params.Body",
    "fastapi.Form",
    "fastapi.params.Form",
    "fastapi.Header",
    "fastapi.params.Header",
    "fastapi.File",
    "fastapi.params.File",
    "fastapi.Cookie",
    "fastapi.params.Cookie",
    "fastapi.Security",
    "fastapi.params.Security",
]

[tool.pytest.ini_options]
addopts = ["-n", "auto", "--cov=.", "--cov-report", "term-missing"]
filterwarnings = [
    "error::DeprecationWarning",
    "error::PendingDeprecationWarning",
    "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",               # sqlalchemy
    "ignore:.*datetime.datetime.utcfromtimestamp().*:DeprecationWarning",            # sqlalchemy
]
norecursedirs = ["tests/functional"]

[tool.coverage.run]
source = ["."]
omit = [
    "main.py",
    "worker.py",
    "alembic/**",
    "settings/**",
    "tests/**",
    "modules/**",
    "venv/**",
    "env/**",
    "api/ext/update.py",
    "api/ext/configurator.py",
    "api/ext/backups.py",
    "api/ext/shopify.py",
    "api/ext/payouts.py",
    "api/views/stores/integrations/shopify.py",
    "api/logger.py",
    "api/logserver.py",
    "api/invoices.py",
    "api/plugins.py",
    "api/tasks.py",
    "api/settings.py",
    "*__init__.py",
    # TODO: try to have tests for plugins somehow later
    "api/views/plugins.py",
    "api/ext/plugins.py",
    "api/ext/exchanges/**",
    "api/ext/fxrate.py",
]
