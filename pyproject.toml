[project]
name = "bitcart-api"
version = "1.0.0"
description = "Bitcart Merchants API"
requires-python = ">=3.11"
dependencies = ["python-decouple"]

[dependency-groups]
lint = ["pre-commit", "ruff"]
test = [
    "httpx",
    "httpx-ws",
    "pytest",
    "pytest-cov",
    "pytest-mock",
    "pytest-parametrization",
    "pytest-xdist",
]
web = [
    "aiofiles",
    "alembic",
    "apprise",
    "asyncpg==0.29.0",
    "bitcart",
    "email-validator",
    "fastapi",
    "fido2",
    "gino[pg]==1.1.0rc1",
    "hiredis",
    "Jinja2",
    "jsonschema",
    "msgpack",
    "packaging",
    "paramiko",
    "psycopg2-binary",
    "pwdlib[bcrypt]",
    "py-machineid",
    "pydantic-settings",
    "pyotp",
    "python-dateutil",
    "python-dotenv",
    "python-multipart",
    "redis",
    "sentry-sdk[fastapi]",
    "setuptools",
    "sqlalchemy<1.4",
    "universalasync",
    "uvicorn[standard]",
]
production = ["gunicorn"]

# daemons
daemon-base = ["aiohttp<4.0"]
btc-based = [{ include-group = "daemon-base" }]
btc-derived = [
    { include-group = "btc-based" },
    "electrum-ecc @ git+https://github.com/bitcart/electrum-ecc@d90e8c79fb7d83fdea9ad0de94dce07f836f69bb",
]
eth-based = [
    { include-group = "daemon-base" },
    "aiolimiter",
    "bitarray<3",                      # electrum requires this
    "eth-account<0.12",                # web3 broke this
    "eth-rlp<2.0",                     # web3 broke this
    "mnemonic",
    "web3>=6,<7",                      # TODO: upgrade
]

# sort alphabetically
bch = [
    { include-group = "btc-based" },
    "electron-cash @ https://github.com/Electron-Cash/Electron-Cash/archive/9fcc5b52e737cb1f34ed258c83cbfb62c31fc70d.zip",
]
bnb = [{ include-group = "eth-based" }]
btc = [
    { include-group = "btc-derived" },
    "electrum[crypto] @ git+https://github.com/spesmilo/electrum@0f4d8d6d57bbff3428950cf531bc98eae473beec",
]
eth = [{ include-group = "eth-based" }]
grs = [
    { include-group = "btc-derived" },
    "electrum-grs[crypto] @ git+https://github.com/Groestlcoin/electrum-grs@a10de858525b7045b835a840200cf9fcff3bfe9e",
]
ltc = [
    { include-group = "btc-derived" },
    "electrum-ltc[crypto] @ git+https://github.com/bitcart/electrum-ltc@fa196d3635364dd2a51e9f1f3c9a130ac61acfda",
    "scrypt>=0.6.0",
]
matic = [{ include-group = "eth-based" }]
trx = [{ include-group = "eth-based" }, "async-lru", "tronpy", "trontxsize"]
xmr = [{ include-group = "daemon-base" }, "monero", "universalasync"]
xrg = [
    { include-group = "btc-based" },
    "oregano @ https://github.com/Ergon-moe/Oregano/archive/6bf78d3be864c053c95ee332c6ab366e5695d8a4.zip",
]

daemons = [
    { include-group = "bch" },
    { include-group = "bnb" },
    { include-group = "btc" },
    { include-group = "eth" },
    { include-group = "grs" },
    { include-group = "ltc" },
    { include-group = "matic" },
    { include-group = "trx" },
    { include-group = "xmr" },
    { include-group = "xrg" },
]

# all groups
dev = [
    { include-group = "lint" },
    { include-group = "test" },
    { include-group = "web" },
    { include-group = "daemons" },
    { include-group = "production" },
]

[tool.uv]
override-dependencies = ["protobuf<6"]
config-settings = { "electrum_ecc.dont_compile" = "1" }

[tool.ruff]
target-version = "py311"
line-length = 127

[tool.ruff.lint]
select = [
    "F",
    "E",
    "I",
    "UP",
    "YTT",
    "B",
    "T10",
    "C",
    "SIM",
    "RUF100",
    "RET",
    "A",
    "S",
    "ASYNC",
]
unfixable = ["F401"] # Prevent to remove unused imports when saving file
ignore = [
    "RET502",
    "RET503",
    "S104",
    "S507",
    "ASYNC110",
    "A005",     # TODO: fix A005
]
mccabe = { max-complexity = 12 }

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S"]
"scripts/*" = ["S"]
".circleci/*" = ["S"]

[tool.ruff.lint.isort]
known-third-party = ["bitcart"]

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.params.Depends",
    "fastapi.Query",
    "fastapi.params.Query",
    "fastapi.Path",
    "fastapi.params.Path",
    "fastapi.Body",
    "fastapi.params.Body",
    "fastapi.Form",
    "fastapi.params.Form",
    "fastapi.Header",
    "fastapi.params.Header",
    "fastapi.File",
    "fastapi.params.File",
    "fastapi.Cookie",
    "fastapi.params.Cookie",
    "fastapi.Security",
    "fastapi.params.Security",
]

[tool.pytest.ini_options]
addopts = ["-n", "auto", "--cov=.", "--cov-report", "term-missing"]
filterwarnings = [
    "error::DeprecationWarning",
    "error::PendingDeprecationWarning",
    "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning",
    "ignore:pkg_resources is deprecated as an API:DeprecationWarning",               # sqlalchemy
    "ignore:.*datetime.datetime.utcfromtimestamp().*:DeprecationWarning",            # sqlalchemy
]
norecursedirs = ["tests/functional"]

[tool.coverage.run]
source = ["."]
omit = [
    "main.py",
    "worker.py",
    "alembic/**",
    "settings/**",
    "tests/**",
    "modules/**",
    "venv/**",
    "env/**",
    "api/ext/update.py",
    "api/ext/configurator.py",
    "api/ext/backups.py",
    "api/ext/shopify.py",
    "api/ext/payouts.py",
    "api/views/stores/integrations/shopify.py",
    "api/logger.py",
    "api/logserver.py",
    "api/invoices.py",
    "api/plugins.py",
    "api/tasks.py",
    "api/settings.py",
    "*__init__.py",
    # TODO: try to have tests for plugins somehow later
    "api/views/plugins.py",
    "api/ext/plugins.py",
    "api/ext/exchanges/**",
    "api/ext/fxrate.py",
]
