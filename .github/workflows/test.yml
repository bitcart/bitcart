name: Test and deploy

on: push

env:
  TEST_ARGS: "-o junit_family=xunit1 --junitxml test-results/pytest/coverage.xml --cov-report html:coverage"

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Inject slug/short variables
        uses: rlespinasse/github-slug-action@v4
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.7"
          cache: "pip"
          cache-dependency-path: |
            requirements/dev.txt
            requirements/lint.txt
      - uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: v1-lint-${{ env.GITHUB_REF_SLUG_URL }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Install Dependencies
        run: |
          pip install -U -r requirements/dev.txt
          pip install -U -r requirements/lint.txt
      - name: Lint
        run: pre-commit run --all-files

  test:
    runs-on: ubuntu-latest
    needs: lint
    env:
      PYTHON: ${{ matrix.python-version }}
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
      fail-fast: false
    services:
      postgres:
        image: postgres:12-alpine
        env:
          POSTGRES_DB: bitcart_test
          POSTGRES_HOST_AUTH_METHOD: trust
        ports:
          - 5432:5432

      redis:
        image: redis:alpine
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - uses: actions/cache@v2
        with:
          path: ${{ env.pythonLocation }}
          key: v1-${{ runner.os }}-dependencies-${{ hashFiles('requirements/web.txt') }}-${{ hashFiles('requirements/test.txt') }}-${{ hashFiles('requirements/daemons/btc.txt') }}
      - name: Install Dependencies
        run: |
          pip install -U pip wheel
          sudo apt update
          sudo apt install libsecp256k1-dev
          pip install -U -r requirements.txt
          pip install -U -r requirements/daemons/btc.txt
          pip install -U -r requirements/test.txt
      - name: prepare daemon
        run: |
          RUNNER_TRACKING_ID="" && (nohup make testnet &)
      - name: Test
        run: |
          make test
          codecov -F tests -e PYTHON
